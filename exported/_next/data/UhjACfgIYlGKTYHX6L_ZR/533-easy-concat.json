{"pageProps":{"dir":"533-easy-concat","id":"533","challenge":"easy","info":{"difficulty":"easy","title":"Concat","tags":"array","author":{"github":"bre30kra69cs","name":"Andrey Krasovsky"}},"prefix":"<!--info-header-start--><h1>Concat <img src=\"https://img.shields.io/badge/-easy-7aad0c\" alt=\"easy\"/> <img src=\"https://img.shields.io/badge/-%23array-999\" alt=\"#array\"/></h1><blockquote><p>by Andrey Krasovsky <a href=\"https://github.com/bre30kra69cs\" target=\"_blank\">@bre30kra69cs</a></p></blockquote><p><a href=\"https://tsch.js.org/533/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\r\n\r\nImplement the JavaScript `Array.concat` function in the type system. A type takes the two arguments. The output should be a new array that includes inputs in ltr order\r\n\r\nFor example\r\n\r\n```ts\r\ntype Result = Concat<[1], [2]> // expected to be [1, 2]\r\n```\r\n\r\n\r\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/533/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/533/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->\r\n","suffix":"import { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<Concat<[], []>, []>>,\r\n  Expect<Equal<Concat<[], [1]>, [1]>>,\r\n  Expect<Equal<Concat<[1, 2], [3, 4]>, [1, 2, 3, 4]>>,\r\n  Expect<Equal<Concat<['1', 2, '3'], [false, boolean, '4']>, ['1', 2, '3', false, boolean, '4']>>,\r\n]\r\n","content":"type Concat<T, U> = any\n"},"__N_SSG":true}