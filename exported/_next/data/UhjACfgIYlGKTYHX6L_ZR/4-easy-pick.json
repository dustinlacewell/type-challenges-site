{"pageProps":{"dir":"4-easy-pick","id":"4","challenge":"easy","info":{"title":"Pick","author":{"name":"Anthony Fu","email":"hi@antfu.me","github":"antfu"},"tags":"union, built-in","related":3},"prefix":"<!--info-header-start--><h1>Pick <img src=\"https://img.shields.io/badge/-easy-7aad0c\" alt=\"easy\"/> <img src=\"https://img.shields.io/badge/-%23union-999\" alt=\"#union\"/> <img src=\"https://img.shields.io/badge/-%23built--in-999\" alt=\"#built-in\"/></h1><blockquote><p>by Anthony Fu <a href=\"https://github.com/antfu\" target=\"_blank\">@antfu</a></p></blockquote><p><a href=\"https://tsch.js.org/4/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.zh-CN.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-gray\" alt=\"简体中文\"/></a>  <a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\nImplement the built-in `Pick<T, K>` generic without using it.\n\nConstructs a type by picking the set of properties `K` from `T`\n\nFor example\n\n```ts\ninterface Todo {\n  title: string\n  description: string\n  completed: boolean\n}\n\ntype TodoPreview = MyPick<Todo, 'title' | 'completed'>\n\nconst todo: TodoPreview = {\n    title: 'Clean room',\n    completed: false,\n}\n```\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/4/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/4/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <hr><h3>Related Challenges</h3><a href=\"https://github.com/type-challenges/type-challenges/blob/master/questions/3-medium-omit/README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-3%E3%83%BBOmit-d9901a\" alt=\"3・Omit\"/></a> <!--info-footer-end-->\n","suffix":"import { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Expected1, MyPick<Todo, 'title'>>>,\n  Expect<Equal<Expected2, MyPick<Todo, 'title' | 'completed'>>>,\n  // @ts-expect-error\n  MyPick<Todo, 'title' | 'completed' | 'invalid'>,\n]\n\ninterface Todo {\n  title: string\n  description: string\n  completed: boolean\n}\n\ninterface Expected1 {\n  title: string\n}\n\ninterface Expected2 {\n  title: string\n  completed: boolean\n}\n","content":"type MyPick<T, K> = any\n"},"__N_SSG":true}