{"pageProps":{"dir":"3-medium-omit","id":"3","challenge":"medium","info":{"title":"Omit","author":{"name":"Anthony Fu","email":"hi@antfu.me","github":"antfu"},"tags":"union, built-in","related":4},"prefix":"<!--info-header-start--><h1>Omit <img src=\"https://img.shields.io/badge/-medium-d9901a\" alt=\"medium\"/> <img src=\"https://img.shields.io/badge/-%23union-999\" alt=\"#union\"/> <img src=\"https://img.shields.io/badge/-%23built--in-999\" alt=\"#built-in\"/></h1><blockquote><p>by Anthony Fu <a href=\"https://github.com/antfu\" target=\"_blank\">@antfu</a></p></blockquote><p><a href=\"https://tsch.js.org/3/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.zh-CN.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-gray\" alt=\"简体中文\"/></a>  <a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\nImplement the built-in `Omit<T, K>` generic without using it.\n\nConstructs a type by picking all properties from `T` and then removing `K`\n\nFor example\n\n```ts\ninterface Todo {\n  title: string\n  description: string\n  completed: boolean\n}\n\ntype TodoPreview = MyOmit<Todo, 'description' | 'title'>\n\nconst todo: TodoPreview = {\n  completed: false,\n}\n```\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/3/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/3/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <hr><h3>Related Challenges</h3><a href=\"https://github.com/type-challenges/type-challenges/blob/master/questions/4-easy-pick/README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-4%E3%83%BBPick-7aad0c\" alt=\"4・Pick\"/></a> <!--info-footer-end-->","suffix":"import { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<Expected1, MyOmit<Todo, 'description'>>>,\n  Expect<Equal<Expected2, MyOmit<Todo, 'description' | 'completed'>>>\n]\n\ninterface Todo {\n  title: string\n  description: string\n  completed: boolean\n}\n\ninterface Expected1 {\n  title: string\n  completed: boolean\n}\n\ninterface Expected2 {\n  title: string\n}\n","content":"type MyOmit<T, K> = any\n"},"__N_SSG":true}