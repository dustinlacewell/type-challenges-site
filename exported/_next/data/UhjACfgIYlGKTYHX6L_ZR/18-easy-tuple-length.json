{"pageProps":{"dir":"18-easy-tuple-length","id":"18","challenge":"easy","info":{"title":"Length of Tuple","author":{"name":"sinoon","email":"sinoon1218@gamil.com","github":"sinoon"},"tags":"tuple"},"prefix":"<!--info-header-start--><h1>Length of Tuple <img src=\"https://img.shields.io/badge/-easy-7aad0c\" alt=\"easy\"/> <img src=\"https://img.shields.io/badge/-%23tuple-999\" alt=\"#tuple\"/></h1><blockquote><p>by sinoon <a href=\"https://github.com/sinoon\" target=\"_blank\">@sinoon</a></p></blockquote><p><a href=\"https://tsch.js.org/18/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.zh-CN.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-gray\" alt=\"简体中文\"/></a>  <a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\nFor given a tuple, you need create a generic `Length`, pick the length of the tuple\n\nFor example\n\n```ts\ntype tesla = ['tesla', 'model 3', 'model X', 'model Y']\ntype spaceX = ['FALCON 9', 'FALCON HEAVY', 'DRAGON', 'STARSHIP', 'HUMAN SPACEFLIGHT']\n\ntype teslaLength = Length<tesla>  // expected 4\ntype spaceXLength = Length<spaceX> // expected 5\n```\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/18/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/18/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->\n","suffix":"import { Equal, Expect } from '@type-challenges/utils'\n\nconst tesla = ['tesla', 'model 3', 'model X', 'model Y'] as const\nconst spaceX = ['FALCON 9', 'FALCON HEAVY', 'DRAGON', 'STARSHIP', 'HUMAN SPACEFLIGHT'] as const\n\ntype cases = [\n  Expect<Equal<Length<typeof tesla>, 4>>,\n  Expect<Equal<Length<typeof spaceX>, 5>>,\n]\n","content":"type Length<T extends any> = any\n"},"__N_SSG":true}