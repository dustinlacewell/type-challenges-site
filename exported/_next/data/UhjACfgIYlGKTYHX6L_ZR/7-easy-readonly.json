{"pageProps":{"dir":"7-easy-readonly","id":"7","challenge":"easy","info":{"title":"Readonly","author":{"name":"Anthony Fu","email":"hi@antfu.me","github":"antfu"},"tags":"built-in, readonly, object-keys","related":"8, 9"},"prefix":"<!--info-header-start--><h1>Readonly <img src=\"https://img.shields.io/badge/-easy-7aad0c\" alt=\"easy\"/> <img src=\"https://img.shields.io/badge/-%23built--in-999\" alt=\"#built-in\"/> <img src=\"https://img.shields.io/badge/-%23readonly-999\" alt=\"#readonly\"/> <img src=\"https://img.shields.io/badge/-%23object--keys-999\" alt=\"#object-keys\"/></h1><blockquote><p>by Anthony Fu <a href=\"https://github.com/antfu\" target=\"_blank\">@antfu</a></p></blockquote><p><a href=\"https://tsch.js.org/7/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.zh-CN.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-gray\" alt=\"简体中文\"/></a>  <a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\n\nImplement the built-in `Readonly<T>` generic without using it.\n\nConstructs a type with all properties of T set to readonly, meaning the properties of the constructed type cannot be reassigned.\n\nFor example\n\n```ts\ninterface Todo {\n  title: string\n  description: string\n}\n\nconst todo: MyReadonly<Todo> = {\n  title: \"Hey\",\n  description: \"foobar\"\n}\n\ntodo.title = \"Hello\" // Error: cannot reassign a readonly property\ntodo.description = \"barFoo\" // Error: cannot reassign a readonly property\n```\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/7/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/7/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <hr><h3>Related Challenges</h3><a href=\"https://github.com/type-challenges/type-challenges/blob/master/questions/8-medium-readonly-2/README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-8%E3%83%BBReadonly%202-d9901a\" alt=\"8・Readonly 2\"/></a>  <a href=\"https://github.com/type-challenges/type-challenges/blob/master/questions/9-medium-deep-readonly/README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-9%E3%83%BBDeep%20Readonly-d9901a\" alt=\"9・Deep Readonly\"/></a> <!--info-footer-end-->","suffix":"import { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<MyReadonly<Todo1>, Readonly<Todo1>>>,\n]\n\ninterface Todo1 {\n  title: string\n  description: string\n  completed: boolean\n}\n","content":"type MyReadonly<T> = any\n"},"__N_SSG":true}