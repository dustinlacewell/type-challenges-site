{"pageProps":{"dir":"57-hard-get-required","id":"57","challenge":"hard","info":{"difficulty":"hard","title":"Get Required","tags":"utils, infer","author":{"github":"zheeeng","name":"Zheeeng"}},"prefix":"<!--info-header-start--><h1>Get Required <img src=\"https://img.shields.io/badge/-hard-de3d37\" alt=\"hard\"/> <img src=\"https://img.shields.io/badge/-%23utils-999\" alt=\"#utils\"/> <img src=\"https://img.shields.io/badge/-%23infer-999\" alt=\"#infer\"/></h1><blockquote><p>by Zheeeng <a href=\"https://github.com/zheeeng\" target=\"_blank\">@zheeeng</a></p></blockquote><p><a href=\"https://tsch.js.org/57/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.zh-CN.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-gray\" alt=\"简体中文\"/></a>  <a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\nImplement the advanced util type `GetRequired<T>`, which remains all the required fields\r\n\r\nFor example\r\n\r\n```ts\r\ntype I = GetRequired<{ foo: number, bar?: string }> // expected to be { foo: number }\r\n```\n\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/57/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/57/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->","suffix":"import { Equal, Expect, ExpectFalse, NotEqual } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n    Expect<Equal<GetRequired<{ foo: number, bar?: string }>, { foo: number }>>,\r\n    Expect<Equal<GetRequired<{ foo: undefined, bar?: undefined }>, { foo: undefined }>>,\r\n]\n","content":"type GetRequired<T> = any\n"},"__N_SSG":true}