{"pageProps":{"dir":"527-medium-append-to-object","id":"527","challenge":"medium","info":{"difficulty":"medium","title":"Append to object","tags":"object-keys","author":{"github":"bre30kra69cs","name":"Andrey Krasovsky"}},"prefix":"<!--info-header-start--><h1>Append to object <img src=\"https://img.shields.io/badge/-medium-d9901a\" alt=\"medium\"/> <img src=\"https://img.shields.io/badge/-%23object--keys-999\" alt=\"#object-keys\"/></h1><blockquote><p>by Andrey Krasovsky <a href=\"https://github.com/bre30kra69cs\" target=\"_blank\">@bre30kra69cs</a></p></blockquote><p><a href=\"https://tsch.js.org/527/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\r\n\r\nImplement a type that adds a new field to the interface. The type takes the three arguments. The output should be an object with the new field\r\n\r\nFor example\r\n\r\n```ts\r\ntype Test = { id: '1' }\r\ntype Result = AppendToObject<Test, 'value', 4> // expected to be { id: '1', value: 4 }\r\n```\r\n\r\n\r\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/527/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/527/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->\r\n","suffix":"import { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype test1 = {\r\n  key: 'cat'\r\n  value: 'green'\r\n}\r\n\r\ntype testExpect1 = {\r\n  key: 'cat'\r\n  value: 'green'\r\n  home: boolean\r\n}\r\n\r\ntype test2 = {\r\n  key: 'dog' | undefined\r\n  value: 'white'\r\n  sun: true\r\n}\r\n\r\ntype testExpect2 = {\r\n  key: 'dog' | undefined\r\n  value: 'white'\r\n  sun: true\r\n  home: 1\r\n}\r\n\r\ntype test3 = {\r\n  key: 'cow'\r\n  value: 'yellow'\r\n  sun: false\r\n}\r\n\r\ntype testExpect3 = {\r\n  key: 'cow'\r\n  value: 'yellow'\r\n  sun: false\r\n  isMotherRussia: false | undefined\r\n}\r\n\r\ntype cases = [\r\n  Expect<Equal<AppendToObject<test1, 'home', boolean>, testExpect1>>,\r\n  Expect<Equal<AppendToObject<test2, 'home', 1>, testExpect2>>,\r\n  Expect<Equal<AppendToObject<test3, 'isMotherRussia', false | undefined>, testExpect3>>,\r\n]\r\n","content":"type AppendToObject<T, U, V> = any\n"},"__N_SSG":true}