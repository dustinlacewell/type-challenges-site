{"pageProps":{"dir":"189-easy-awaited","id":"189","challenge":"easy","info":{"difficulty":"easy","title":"Awaited","tags":"promise","editor":{"github":"sinoon","name":"sinoon"},"author":{"github":"maciejsikora","name":"Maciej Sikora"}},"prefix":"<!--info-header-start--><h1>Awaited <img src=\"https://img.shields.io/badge/-easy-7aad0c\" alt=\"easy\"/> <img src=\"https://img.shields.io/badge/-%23promise-999\" alt=\"#promise\"/></h1><blockquote><p>by Maciej Sikora <a href=\"https://github.com/maciejsikora\" target=\"_blank\">@maciejsikora</a></p></blockquote><p><a href=\"https://tsch.js.org/189/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\nIf we have a type which is wrapped type like Promise. How we can get a type which is inside the wrapped type? For example if we have `Promise<ExampleType>` how to get ExampleType?\n\n> This question is ported from the [original article](https://dev.to/macsikora/advanced-typescript-exercises-question-1-45k4) by [@maciejsikora](https://github.com/maciejsikora)\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/189/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/189/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->\n","suffix":"import { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype X = Promise<string>\r\ntype Y = Promise<{ field: number }>\r\n\r\ntype cases = [\r\n  Expect<Equal<Awaited<X>, string>>,\r\n  Expect<Equal<Awaited<Y>, { field: number }>>,\r\n]\n","content":"type Awaited = any\n"},"__N_SSG":true}