{"pageProps":{"dir":"191-medium-append-argument","id":"191","challenge":"medium","info":{"difficulty":"medium","title":"Append Argument","editor":{"github":"sinoon","name":"sinoon"},"author":{"github":"maciejsikora","name":"Maciej Sikora"},"tags":"arguments"},"prefix":"<!--info-header-start--><h1>Append Argument <img src=\"https://img.shields.io/badge/-medium-d9901a\" alt=\"medium\"/> <img src=\"https://img.shields.io/badge/-%23arguments-999\" alt=\"#arguments\"/></h1><blockquote><p>by Maciej Sikora <a href=\"https://github.com/maciejsikora\" target=\"_blank\">@maciejsikora</a></p></blockquote><p><a href=\"https://tsch.js.org/191/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.zh-CN.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-gray\" alt=\"ç®€ä½“ä¸­æ–‡\"/></a>  <a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"æ—¥æœ¬èªž\"/></a> </p><!--info-header-end-->\n\nFor given function type `Fn`, and any type `A` (any in this context means we don't restrict the type, and I don't have in mind any type ðŸ˜‰) create a generic type which will take `Fn` as the first argument, `A` as the second, and will produce function type `G` which will be the same as `Fn` but with appended argument `A` as a last one.\n\nFor example,\n\n```typescript\ntype Fn = (a: number, b: string) => number\n\ntype Result = AppendArgument<Fn, boolean> \n// expected be (a: number, b: string, x: boolean) => number\n```\n\n> This question is ported from the [original article](https://dev.to/macsikora/advanced-typescript-exercises-question-4-495c) by [@maciejsikora](https://github.com/maciejsikora)\n\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/191/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/191/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->\n","suffix":"import { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype Case1 = AppendArgument<(a: number, b: string) => number, boolean>\r\ntype Result1 = (a: number, b: string, x: boolean) => number\r\n\r\ntype Case2 = AppendArgument<() => void, undefined>\r\ntype Result2 = (x: undefined) => void\r\n\r\ntype cases = [\r\n  Expect<Equal<Case1, Result1>>,\r\n  Expect<Equal<Case2, Result2>>,\r\n]\r\n","content":"type AppendArgument<Fn, A> = any\n"},"__N_SSG":true}