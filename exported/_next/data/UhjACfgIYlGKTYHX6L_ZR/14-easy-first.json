{"pageProps":{"dir":"14-easy-first","id":"14","challenge":"easy","info":{"title":"First of Array","author":{"name":"Anthony Fu","email":"hi@antfu.me","github":"antfu"},"tags":"array","related":15},"prefix":"<!--info-header-start--><h1>First of Array <img src=\"https://img.shields.io/badge/-easy-7aad0c\" alt=\"easy\"/> <img src=\"https://img.shields.io/badge/-%23array-999\" alt=\"#array\"/></h1><blockquote><p>by Anthony Fu <a href=\"https://github.com/antfu\" target=\"_blank\">@antfu</a></p></blockquote><p><a href=\"https://tsch.js.org/14/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.zh-CN.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-gray\" alt=\"简体中文\"/></a>  <a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\n\nImplement a generic `First<T>` that takes an Array `T` and returns it's first element's type.\n\nFor example\n\n```ts\ntype arr1 = ['a', 'b', 'c']\ntype arr2 = [3, 2, 1]\n\ntype head1 = First<arr1> // expected to be 'a'\ntype head2 = First<arr2> // expected to be 3\n```\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/14/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/14/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <hr><h3>Related Challenges</h3><a href=\"https://github.com/type-challenges/type-challenges/blob/master/questions/15-medium-last/README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-15%E3%83%BBLast%20of%20Array-d9901a\" alt=\"15・Last of Array\"/></a> <!--info-footer-end-->","suffix":"import { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<First<[3, 2, 1]>, 3>>,\n  Expect<Equal<First<[() => 123, { a: string }]>, () => 123>>,\n  Expect<Equal<First<[]>, never>>,\n  Expect<Equal<First<[undefined]>, undefined>>\n]\n","content":"type First<T extends any[]> = any\n"},"__N_SSG":true}