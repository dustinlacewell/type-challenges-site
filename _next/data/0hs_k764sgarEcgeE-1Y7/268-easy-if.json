{"pageProps":{"dir":"268-easy-if","id":"268","challenge":"easy","info":{"difficulty":"easy","title":"If","tags":"utils","author":{"github":"pashutk","name":"Pavel Glushkov"}},"prefix":"<!--info-header-start--><h1>If <img src=\"https://img.shields.io/badge/-easy-7aad0c\" alt=\"easy\"/> <img src=\"https://img.shields.io/badge/-%23utils-999\" alt=\"#utils\"/></h1><blockquote><p>by Pavel Glushkov <a href=\"https://github.com/pashutk\" target=\"_blank\">@pashutk</a></p></blockquote><p><a href=\"https://tsch.js.org/268/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\nImplement a utils `If` which accepts condition `C`, a truthy return type `T`, and a falsy return type `F`. `C` is expected to be either `true` or `false` while `T` and `F` can be any type.\r\n\r\nFor example:\r\n\r\n```ts\r\ntype A = If<true, 'a', 'b'>  // expected to be 'a'\r\ntype B = If<false, 'a', 'b'> // expected to be 'b'\r\n```\n\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/268/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/268/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->","suffix":"import { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<If<true, 'a', 'b'>, 'a'>>,\r\n  Expect<Equal<If<false, 'a', 2>, 2>>,\r\n]\r\n\r\n// @ts-expect-error\r\ntype error = If<null, 'a', 'b'>\n","content":"type If<C, T, F> = any\n"},"__N_SSG":true}