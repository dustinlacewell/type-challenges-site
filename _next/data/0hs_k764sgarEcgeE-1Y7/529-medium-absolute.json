{"pageProps":{"dir":"529-medium-absolute","id":"529","challenge":"medium","info":{"difficulty":"medium","title":"Absolute","tags":"math, template-literal","author":{"github":"bre30kra69cs","name":"Andrey Krasovsky"}},"prefix":"<!--info-header-start--><h1>Absolute <img src=\"https://img.shields.io/badge/-medium-d9901a\" alt=\"medium\"/> <img src=\"https://img.shields.io/badge/-%23math-999\" alt=\"#math\"/> <img src=\"https://img.shields.io/badge/-%23template--literal-999\" alt=\"#template-literal\"/></h1><blockquote><p>by Andrey Krasovsky <a href=\"https://github.com/bre30kra69cs\" target=\"_blank\">@bre30kra69cs</a></p></blockquote><p><a href=\"https://tsch.js.org/529/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\r\n\r\nImplement the `Absolute` type. A type that take string, number or bigint. The output should be a positive number string\r\n\r\nFor example\r\n\r\n```ts\r\ntype Test = -100;\r\ntype Result = Absolute<Test>; // expected to be \"100\"\r\n```\r\n\r\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/529/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/529/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->\r\n","suffix":"import { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<Absolute<0>, '0'>>,\r\n  Expect<Equal<Absolute<-0>, '0'>>,\r\n  Expect<Equal<Absolute<10>, '10'>>,\r\n  Expect<Equal<Absolute<-5>, '5'>>,\r\n  Expect<Equal<Absolute<'0'>, '0'>>,\r\n  Expect<Equal<Absolute<'-0'>, '0'>>,\r\n  Expect<Equal<Absolute<'10'>, '10'>>,\r\n  Expect<Equal<Absolute<'-5'>, '5'>>,\r\n  Expect<Equal<Absolute<-1_000_000n>, '1000000'>>,\r\n  Expect<Equal<Absolute<9_999n>, '9999'>>,\r\n]\r\n","content":"type Absolute<T extends number | string | bigint> = any\n"},"__N_SSG":true}