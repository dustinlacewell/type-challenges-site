{"pageProps":{"dir":"517-extreme-multiply","id":"517","challenge":"extreme","info":{"difficulty":"extreme","title":"Multiply","tags":"math, template-literal","related":476,"author":{"github":"uid11","name":null}},"prefix":"<!--info-header-start--><h1>Multiply <img src=\"https://img.shields.io/badge/-extreme-b11b8d\" alt=\"extreme\"/> <img src=\"https://img.shields.io/badge/-%23math-999\" alt=\"#math\"/> <img src=\"https://img.shields.io/badge/-%23template--literal-999\" alt=\"#template-literal\"/></h1><blockquote><p>by null <a href=\"https://github.com/uid11\" target=\"_blank\">@uid11</a></p></blockquote><p><a href=\"https://tsch.js.org/517/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> </p><!--info-header-end-->\n\n**This challenge continues from [476 - Sum](https://tsch.js.org/476), it is recommended that you finish that one first, and modify your code based on it to start this challenge.**\r\n\r\nImplement a type `Multiply<A, B>` that multiplies two non-negative integers and returns their product as a string. Numbers can be specified as string, number, or bigint.\r\n\r\nFor example,\r\n\r\n```ts\r\ntype T0 = Multiply<2, 3> // '6'\r\ntype T1 = Multiply<3, '5'> // '15'\r\ntype T2 = Multiply<'4', 10> // '40'\r\ntype T3 = Multiply<0, 16> // '0'\r\ntype T4 = Multiply<'13', '21'> // '273'\r\ntype T5 = Multiply<'43423', 321543n> // '13962361689'\r\n```\n\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/517/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/517/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <hr><h3>Related Challenges</h3><a href=\"https://github.com/type-challenges/type-challenges/blob/master/questions/476-extreme-sum/README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-476%E3%83%BBSum-b11b8d\" alt=\"476ãƒ»Sum\"/></a> <!--info-footer-end-->","suffix":"import { Equal, Expect } from '@type-challenges/utils'\r\n\r\ntype cases = [\r\n  Expect<Equal<Multiply<2, 3>, '6'>>,\r\n  Expect<Equal<Multiply<3, '5'>, '15'>>,\r\n  Expect<Equal<Multiply<'4', 10>, '40'>>,\r\n  Expect<Equal<Multiply<0, 16>, '0'>>,\r\n  Expect<Equal<Multiply<'13', '21'>, '273'>>,\r\n  Expect<Equal<Multiply<'43423', 321543n>, '13962361689'>>,\r\n  Expect<Equal<Multiply<9999, 1>, '9999'>>,\r\n  Expect<Equal<Multiply<4325234, '39532'>, '170985150488'>>,\r\n  Expect<Equal<Multiply<100_000n, '1'>, '100000'>>,\r\n  Expect<Equal<Multiply<259, 9125385>, '2363474715'>>,\r\n  Expect<Equal<Multiply<9, 99>, '891'>>,\r\n  Expect<Equal<Multiply<315, '100'>, '31500'>>,\r\n  Expect<Equal<Multiply<11n, 13n>, '143'>>,\r\n  Expect<Equal<Multiply<728, 0>, '0'>>,\r\n  Expect<Equal<Multiply<'0', 213>, '0'>>,\r\n  Expect<Equal<Multiply<0, '0'>, '0'>>\r\n]\r\n","content":"type Multiply<A extends string | number | bigint, B extends string | number | bigint> = string\n"},"__N_SSG":true}