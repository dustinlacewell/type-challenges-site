{"pageProps":{"dir":"5-extreme-readonly-keys","id":"5","challenge":"extreme","info":{"title":"Get Readonly Keys","author":{"name":"Anthony Fu","email":"hi@antfu.me","github":"antfu"},"tags":"utils, object-keys"},"prefix":"<!--info-header-start--><h1>Get Readonly Keys <img src=\"https://img.shields.io/badge/-extreme-b11b8d\" alt=\"extreme\"/> <img src=\"https://img.shields.io/badge/-%23utils-999\" alt=\"#utils\"/> <img src=\"https://img.shields.io/badge/-%23object--keys-999\" alt=\"#object-keys\"/></h1><blockquote><p>by Anthony Fu <a href=\"https://github.com/antfu\" target=\"_blank\">@antfu</a></p></blockquote><p><a href=\"https://tsch.js.org/5/play\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Take%20the%20Challenge-3178c6?logo=typescript&logoColor=white\" alt=\"Take the Challenge\"/></a> &nbsp;&nbsp;&nbsp;<a href=\"./README.zh-CN.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-gray\" alt=\"简体中文\"/></a>  <a href=\"./README.ja.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-%E6%97%A5%E6%9C%AC%E8%AA%9E-gray\" alt=\"日本語\"/></a> </p><!--info-header-end-->\n\nImplement a generic `GetReadonlyKeys<T>` that returns a union of the readonly keys of an Object.\n\nFor example\n\n```ts\ninterface Todo {\n  readonly title: string\n  readonly description: string\n  completed: boolean\n}\n\ntype Keys = GetReadonlyKeys<Todo> // expected to be \"title\" | \"description\"\n```\n\n<!--info-footer-start--><br><a href=\"../../README.md\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Back-grey\" alt=\"Back\"/></a> <a href=\"https://tsch.js.org/5/answer\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Share%20your%20Solutions-teal\" alt=\"Share your Solutions\"/></a> <a href=\"https://tsch.js.org/5/solutions\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-Check%20out%20Solutions-de5a77?logo=awesome-lists&logoColor=white\" alt=\"Check out Solutions\"/></a> <!--info-footer-end-->","suffix":"import { Equal, Expect } from '@type-challenges/utils'\n\ntype cases = [\n  Expect<Equal<'title', GetReadonlyKeys<Todo1>>>,\n  Expect<Equal<'title' | 'description', GetReadonlyKeys<Todo2>>>,\n]\n\ninterface Todo1 {\n  readonly title: string\n  description: string\n  completed: boolean\n}\n\ninterface Todo2 {\n  readonly title: string\n  readonly description: string\n  completed?: boolean\n}\n","content":"type GetReadonlyKeys<T> = any\n"},"__N_SSG":true}